// <auto-generated />
using System;
using CharacterCreatorMvc.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CharacterCreatorMvc.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230112174155_SeedCharacters")]
    partial class SeedCharacters
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CharacterCreatorMvc.Domain.Entities.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterTypeId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("CharacterCreatorMvc.Domain.Entities.CharacterType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CharactersTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd0002b6-8363-4c1e-a598-c99140fadda1"),
                            Name = "Warrior"
                        },
                        new
                        {
                            Id = new Guid("1664d022-894c-477e-88aa-45e28ce37f1b"),
                            Name = "Mage"
                        },
                        new
                        {
                            Id = new Guid("5e2e6f80-9fff-4d45-92c4-1e343ce39303"),
                            Name = "Barbarian"
                        },
                        new
                        {
                            Id = new Guid("41c3f6df-5b14-4d25-a39f-51ff671a49fc"),
                            Name = "Sorcerer"
                        });
                });

            modelBuilder.Entity("CharacterCreatorMvc.Domain.Entities.Character", b =>
                {
                    b.HasOne("CharacterCreatorMvc.Domain.Entities.CharacterType", "CharacterType")
                        .WithMany("Characters")
                        .HasForeignKey("CharacterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CharacterType");
                });

            modelBuilder.Entity("CharacterCreatorMvc.Domain.Entities.CharacterType", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
